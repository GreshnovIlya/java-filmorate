DROP TABLE IF EXISTS users, films, genres, liked_film, mpa, film_genre, user_friendship CASCADE;
CREATE TABLE IF NOT EXISTS mpa (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(100)
);
CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    release_date DATE,
    duration INTEGER,
    id_mpa INTEGER REFERENCES mpa (id) ON DELETE SET NULL
);
CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name VARCHAR(100)
);
CREATE TABLE IF NOT EXISTS film_genre (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    id_film INTEGER REFERENCES films (id) ON DELETE CASCADE,
    id_genre INTEGER REFERENCES genres (id) ON DELETE CASCADE,
    UNIQUE(id_film, id_genre)
);
CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(100),
    name VARCHAR(100),
    birthday DATE
);
CREATE TABLE IF NOT EXISTS liked_film (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    id_film INTEGER REFERENCES films (id) ON DELETE CASCADE,
    id_user INTEGER REFERENCES users (id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS user_friendship (
    id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    id_user INTEGER REFERENCES users (id) ON DELETE CASCADE,
    id_friend INTEGER REFERENCES users (id) ON DELETE CASCADE,
    friendship BOOLEAN
);